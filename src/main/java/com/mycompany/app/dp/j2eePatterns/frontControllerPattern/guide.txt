
Front Controller Pattern
A Front Controller Pattern says that if you want to provide the centralized request handling mechanism so that all the requests will be handled by a single handler". This handler can do the authentication or authorization or logging or tracking of request and then pass the requests to corresponding handlers.

Usage:
When you want to control the page flow and navigation.
When you want to access and manage the data model.
When you want to handle the business processing.
Benefits:
It reduces the duplication of code in JSP pages, especially in those cases where several resources require the same processing.
It maintains and controls a web application more effectively.
A web application of two-tier architecture, the recommended approach is front controller to deal with user requests.
UML for Front Controller Pattern:
Front Controller Pattern
Implementation of Front Controller Pattern:
Step 1

Create a Login.html web page.

<html>  
<head>  
<title>  
Login page  
</title>  
</head>  
<body style="color:green;">  
<h1 style="font-family:Comic Sans Ms;text-align="center";font-size:20pt;  
color:#00FF00;>  
Login Page  
</h1>  
<form method="POST" action="FrontControllerServlet" onsubmit="return checkForm(this);">  
<p>Username: <input type="text" name="username"></p>  
<p>Password: <input type="password" name="pwd1"></p>  
<p>Confirm Password: <input type="password" name="pwd2"></p>  
<p><input type="submit" value="Login"></p>  
</form>  
<script type="text/javascript">  
  
  function checkForm(form)  
  {  
    if(form.username.value == "") {  
      alert("Error: Username cannot be blank!");  
      form.username.focus();  
      return false;  
    }  
    re = /^\w+$/;  
    if(!re.test(form.username.value)) {  
      alert("Error: Username must contain only letters, numbers and underscores!");  
      form.username.focus();  
      return false;  
    }  
  
    if(form.pwd1.value != "" && form.pwd1.value == form.pwd2.value) {  
      if(form.pwd1.value.length < 6) {  
        alert("Error: Password must contain at least six characters!");  
        form.pwd1.focus();  
        return false;  
      }  
      if(form.pwd1.value == form.username.value) {  
        alert("Error: Password must be different from Username!");  
        form.pwd1.focus();  
        return false;  
      }  
    re = /[0-9]/;  
      if(!re.test(form.pwd1.value)) {  
        alert("Error: password must contain at least one number (0-9)!");  
        form.pwd1.focus();  
        return false;  
      }  
      re = /[a-z]/;  
      if(!re.test(form.pwd1.value)) {  
        alert("Error: password must contain at least one lowercase letter (a-z)!");  
        form.pwd1.focus();  
        return false;  
      }  
      re = /[A-Z]/;  
      if(!re.test(form.pwd1.value)) {  
        alert("Error: password must contain at least one uppercase letter (A-Z)!");  
        form.pwd1.focus();  
        return false;  
      }  
    } else {  
      alert("Error: Please check that you've entered and confirmed your password!");  
      form.pwd1.focus();  
      return false;  
    }  
    return true;  
  }  
  
</script>  
</body>  
</html>  
Step 2

Create a FrontControllerServlet.java class which is a servlet and it may be a JSP page also.

package controller;  
  
import java.io.IOException;  
import java.io.PrintWriter;  
  
import javax.servlet.RequestDispatcher;  
import javax.servlet.ServletException;  
import javax.servlet.annotation.WebServlet;  
import javax.servlet.http.HttpServlet;  
import javax.servlet.http.HttpServletRequest;  
import javax.servlet.http.HttpServletResponse;  
  
/** 
 * Servlet implementation class FrontControllerServlet 
 */  
@WebServlet("/FrontControllerServlet")  
public class FrontControllerServlet extends HttpServlet {  
      
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {  
                   
        response.setContentType("text/html");    
        PrintWriter out = response.getWriter();    
          
        String username=request.getParameter("username");  
        String password=request.getParameter("pwd2");  
          
        if (password.equals("Ashwani1987")) {  
              
            RequestDispatcher rd=request.getRequestDispatcher("/Success.jsp");  
            rd.forward(request, response);  
        } else {  
  
            RequestDispatcher rd=request.getRequestDispatcher("/Error.jsp");  
            rd.forward(request, response);  
        }  
  
    }  
  
}  
Step 3

Create a Success.jsp page.

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"  
    pageEncoding="ISO-8859-1"%>  
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">  
<html>  
<head>  
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">  
<title>Welcome Page</title>  
</head>  
<body style="background-color: gray;">  
  
   <%  String name=request.getParameter("username"); %>  
  
    <b>Welcome,</b> <% out.print(name); %>  
  
</body>  
</html>  
Step 4

Create a Error.jsp page.

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"  
    pageEncoding="ISO-8859-1"%>  
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">  
<html>  
<head>  
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">  
<title>Insert title here</title>  
</head>  
<body style="background-color: olive;">  
  
    <b>You are have entered wrong username or password!!</b><br>  
  
    <a href="Login.html">Back To Home Page</a>  
</body>  
</html>  
Step 5

Create a web.xml file.

<?xml version="1.0" encoding="UTF-8"?>  
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">  
  <display-name>Front Controller Example</display-name>  
  <welcome-file-list>  
    <welcome-file>Login.html</welcome-file>  
  </welcome-file-list>  
</web-app>  
Output:

Front Controller Pattern
Front Controller Pattern
Front Controller Pattern
Front Controller Pattern
Front Controller Pattern
Front Controller Pattern
Download this Example

